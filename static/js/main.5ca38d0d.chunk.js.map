{"version":3,"sources":["img/profile.jpg","serviceWorker.js","components/Edit.js","components/ImgUpload.js","components/Field.js","components/Profile.js","containers/CardProfile.js","components/Header.js","App.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Edit","onSubmit","children","className","type","defaultProps","ImgUpload","onChange","src","htmlFor","alt","id","accept","multiple","Field","value","placeholder","maxlength","maxLength","name","required","Profile","status","CardProfile","file","imagePreviewUrl","profile","active","photoUpload","e","preventDefault","reader","FileReader","target","files","onloadend","setState","result","readAsDataURL","edit","handleSubmit","this","Component","Header","rel","title","href","App","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5ca38d0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.7490c354.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Edit = ({ onSubmit, children }) => (\n  <div className=\"card\">\n    <form onSubmit={onSubmit}>\n      <h1>Profile Card</h1>\n\n      {children}\n\n      <button type=\"submit\" className=\"save\">\n        Save{' '}\n      </button>\n    </form>\n  </div>\n);\n\nEdit.propTypes = {\n  children: PropTypes.node,\n  onSubmit: PropTypes.func\n};\n\nEdit.defaultProps = {\n  children: null,\n  onSubmit: () => {}\n};\n\nexport default Edit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImgUpload = ({ onChange, src }) => (\n  <label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\">\n    <span className=\"img-wrap img-upload\">\n      <img htmlFor=\"photo-upload\" src={src} alt=\"Upload\" />\n    </span>\n\n    <input id=\"photo-upload\" type=\"file\" accept=\"image/*\" onChange={onChange} multiple />\n  </label>\n);\n\nImgUpload.propTypes = {\n  src: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nImgUpload.defaultProps = {\n  src: '../img/profile.jpg',\n  onChange: () => {}\n};\n\nexport default ImgUpload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Field = ({ onChange, value, type, placeholder, maxlength }) => (\n  <div className=\"field\">\n    <label htmlFor={type}>{type}:</label>\n\n    <input id={type} type=\"text\" onChange={onChange} maxLength={maxlength} value={value} placeholder={placeholder} name={type} required />\n  </div>\n);\n\nField.propTypes = {\n  type: PropTypes.string.isRequired,\n  maxlength: PropTypes.number,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nField.defaultProps = {\n  maxlength: 25,\n  placeholder: '',\n  value: '',\n  onChange: () => {}\n};\n\nexport default Field;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Profile = ({ onSubmit, src, name, status }) => (\n  <div className=\"card\">\n    <form onSubmit={onSubmit}>\n      <h1>Profile Card</h1>\n\n      <label className=\"custom-file-upload\">\n        <div className=\"img-wrap\">\n          <img htmlFor=\"photo-upload\" src={src} alt=\"Upload\" />\n        </div>\n      </label>\n\n      <div className=\"name\">{name}</div>\n\n      <div className=\"status\">{status}</div>\n\n      <button type=\"submit\" className=\"edit\">\n        Edit Profile{' '}\n      </button>\n    </form>\n  </div>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  src: PropTypes.string,\n  onSubmit: PropTypes.func\n};\n\nProfile.defaultProps = {\n  src: '../img/profile.jpg',\n  onSubmit: () => {}\n};\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nimport Edit from '../components/Edit';\nimport ImgUpload from '../components/ImgUpload';\nimport Field from '../components/Field';\nimport Profile from '../components/Profile';\n\nimport profile from '../img/profile.jpg';\n\nclass CardProfile extends Component {\n  state = {\n    file: '',\n    imagePreviewUrl: profile,\n    name: '',\n    status: '',\n    active: 'edit'\n  };\n\n  photoUpload = e => {\n    e.preventDefault();\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  edit = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.setState(({ active }) => ({\n      active: active === 'edit' ? 'profile' : 'edit'\n    }));\n  };\n\n  render() {\n    const { imagePreviewUrl, name, status, active } = this.state;\n\n    return (\n      <div>\n        {active === 'edit' ? (\n          <Edit onSubmit={this.handleSubmit}>\n            <ImgUpload onChange={this.photoUpload} src={imagePreviewUrl} />\n\n            <Field onChange={this.edit} value={name} type=\"name\" placeholder=\"Alexa\" maxlength={25} />\n\n            <Field onChange={this.edit} value={status} type=\"status\" placeholder=\"It's a nice day!\" maxlength={35} />\n          </Edit>\n        ) : (\n          <Profile onSubmit={this.handleSubmit} src={imagePreviewUrl} name={name} status={status} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CardProfile;\n","import React from 'react';\n\nconst Header = () => (\n  <header>\n    <a target=\"_blank\" rel=\"noopener noreferrer\" title=\"View code\" href=\"https://github.com/ArturW1998/ProfileCard/\">\n      <i className=\"fab fa-github\" />\n    </a>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nimport CardProfile from './containers/CardProfile';\nimport Header from './components/Header';\n\nimport './style/App.css';\n\nconst App = () => (\n  <>\n    <Header />\n    <CardProfile />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nimport './style/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}